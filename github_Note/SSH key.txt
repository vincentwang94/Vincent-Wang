🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈
检查已有的 SSH keys:
	$ ls -al ~/.ssh
	-rw-r--r--    1 zhirongwang  staff   747B Sep 27 18:01 id_rsa.pub 
			//以pub结尾的就是public key

🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈
Generate 新的 SSH key:

	$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
			//此command直接generate 好ssh key, 跟prompt完成接下来的步骤


🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈
(并非 optional， 必须完成)	
 	将新建SSH key加入到 ssh-agent里：（目的：不需要每次push都输入密码）
	1.
	$ eval "$(ssh-agent -s)"
		//在背后打开agent
	
	2.新建 ~/.ssh/config 文件，写入以下内容:(可能optional)
	Host *
	  AddKeysToAgent yes
   	  UseKeychain yes
  	  IdentityFile ~/.ssh/id_rsa
	
	3. 将SSH key 加入到 agent 内：
	$ ssh-add -K ~/.ssh/id_rsa
		//例子：ssh-add -K ~/.ssh/vincentwang94
	
	   agent 就是一个本地钥匙盒，每一次只能装一个钥匙。 想要连接对应的repository的时候，
	就要在这个本地钥匙盒内放上对应的钥匙。 所以每次switch GitHub account的时候， 都要
	更新agent。  因为每个GitHub account对应一个其他account不重复的public key. 

	


🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈
将generated 的ssh key 加入到 Github account 内：
	1.
	$ pbcopy < ~/.ssh/id_rsa.pub
		//将 .pub文件内容（public key）复制到clipboard内
		//例子： pbcopy < ~/.ssh/mykey.pub

	
	2.
	command + v 黏贴到GitHub 的网页内，输入密码，完成接下来的步骤
	(或者没有更多操作)

🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈
	ls -la ~/.ssh
	//output 
	-rw-------    1 zhirongwang  staff   3.4K Dec 20 15:01 id_rsa  
		//此文件用于加入到agent内
	-rw-r--r--    1 zhirongwang  staff   748B Dec 20 15:01 id_rsa.pub 
		//此文件是真正的钥匙


🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈🙈



